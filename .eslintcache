[{"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/actions.js":"1","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/Review.js":"2","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/SandwichListItem.js":"3","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/actionTypes.js":"4","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/rootReducer.js":"5","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Containers/DetailsContainer.js":"6","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/Sandwich.js":"7","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/FilterBar.js":"8"},{"size":5279,"mtime":1611172525355,"results":"9","hashOfConfig":"10"},{"size":2360,"mtime":1611168966962,"results":"11","hashOfConfig":"10"},{"size":773,"mtime":1611099155905,"results":"12","hashOfConfig":"10"},{"size":798,"mtime":1611161442571,"results":"13","hashOfConfig":"10"},{"size":4660,"mtime":1611169500365,"results":"14","hashOfConfig":"10"},{"size":1220,"mtime":1611167321856,"results":"15","hashOfConfig":"10"},{"size":1641,"mtime":1611174704010,"results":"16","hashOfConfig":"10"},{"size":3533,"mtime":1611167230394,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"16he3xi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/actions.js",["36"],"import { bindActionCreators } from 'redux'\nimport { GET_DELIS, LOGIN_USER, REVIEW_FORM, SANDWICH_FILTER, DELI_FILTER, GET_REVIEWS, REVIEW_CLICK, RENDER_REVIEW, CURRENT_DELI, POST_REVIEW, REVIEW_EDIT_CLICK, PATCH_REVIEW, GET_DELI, GET_SANDWICHES, GET_SANDWICH, SANDWICH_CLICK, POST_LIKE } from './actionTypes'\n\n/// USER ACTIONS ///\n\nexport function loginUser(userObj) {\n    console.log(userObj)\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/users/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accepts\": \"application.json\"\n            },\n            body: JSON.stringify(userObj),\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.id) {\n                    // console.log(\"found user\", data['username'])\n                    localStorage.setItem(\"USER_DATA\", JSON.stringify(data))\n                    dispatch({ type: LOGIN_USER, payload: data })\n                } else {\n                    console.log(\"user not found\")\n                    window.alert(\"Wrong Username or Password Please Try Again\")\n                }\n            })\n            .catch(console.log)\n    }\n\n}\n\n/// FILTER ACTIONS ///\n\nexport function setSandwichFilter(sandFilter) {\n    return { type: SANDWICH_FILTER, payload: sandFilter }\n}\n\nexport function setDeliFilter(deliFilter) {\n    return { type: DELI_FILTER, payload: deliFilter }\n}\n\n/// DELI ACTIONS ///\n\nexport function getDelis() {\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/delis')\n            .then(r => r.json())\n            .then(arrayOfDelis => {\n                dispatch({ type: GET_DELIS, payload: arrayOfDelis })\n            })\n    }\n}\n\nexport function getDeliOfReview(deli_id){\n    // console.log(deli_id)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/delis/${deli_id}`)\n            .then(r => r.json())\n            .then(deliFromReview => {\n                dispatch({ type: GET_DELI, payload: deliFromReview })\n            })\n    }\n}\n\nexport function currentDeli(deliObj) {\n    return { type: CURRENT_DELI, payload: deliObj }\n}\n\n/// SANDWICH ACTIONS ///\n\nexport function getSandwiches() {\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/sandwiches')\n            .then(r => r.json())\n            .then(arrayOfSandwiches => {\n                dispatch({ type: GET_SANDWICHES, payload: arrayOfSandwiches })\n            })\n    }\n}\n\nexport function getSandwich(sandwichObj) {\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/sandwiches/${sandwichObj.id}`)\n            .then(r => r.json())\n            .then(sandwich => {\n                dispatch({ type: GET_SANDWICH, payload: sandwich })\n                console.log(\"success\", sandwich)\n            })\n    }\n}\n\nexport function sandwichBeenClicked(){\n    return { type: SANDWICH_CLICK }\n}\n\n/// REVIEW ACTIONS ///\n\nexport function renderReviewForm() {\n    return { type: REVIEW_FORM }\n}\n\nexport function reviewClick() {\n    return { type: REVIEW_CLICK }\n}\n\nexport function renderReview(reviewObj) {\n    return { type: RENDER_REVIEW, payload: reviewObj }\n}\n\nexport function reviewEditClicked() {\n    return { type: REVIEW_EDIT_CLICK }\n}\n\nexport function getReviews() {\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/reviews')\n            .then(r => r.json())\n            .then(arrayOfReviews => {\n                dispatch({ type: GET_REVIEWS, payload: arrayOfReviews })\n            })\n    }\n}\n\nexport function postReview(reviewObj) {\n\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/reviews', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(reviewObj),\n        })\n            .then(response => response.json())\n            .then(newReview => {\n                dispatch({ type: POST_REVIEW, payload: newReview})\n                console.log('Success:', newReview);\n            })\n    }\n}\n\nexport function patchReview(reviewObj) {\n    console.log(reviewObj.id)\n    return function (dispatch) {\n        fetch(`http://localhost:3000/api/reviews/${reviewObj.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(reviewObj),\n        })\n            .then(response => response.json())\n            .then(updatedReview => {\n                dispatch({ type: PATCH_REVIEW, payload: updatedReview})\n                console.log('Success:', updatedReview);\n            })\n    }\n}\n\n\n/// LIKE ACTIONS ///\nexport function likeSandwich(newLike){\n    console.log(newLike)\n    return function (dispatch) {\n    fetch(`http://localhost:3000/api/likes/`,{\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newLike),\n              })\n              .then(response => response.json())\n              .then(newLike => {\n                dispatch({ type: POST_LIKE, payload: newLike})\n                console.log('Success:', newLike);\n            }\n        )\n    }\n}","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/Review.js",["37"],"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/SandwichListItem.js",["38"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { getSandwich, sandwichBeenClicked } from '../Redux/actions'\n\nclass SandwichListItem extends React.Component {\n\n    clickHandler = () => {\n        this.props.getSandwich(this.props.sandwichObj)\n        this.props.sandwichBeenClicked()\n    }\n\n    render() {\n        // console.log(this.props.sandwichObj.name)\n        return (\n            <ul>\n                <li onClick={this.clickHandler}>{this.props.sandwichObj.name}</li>\n            </ul>\n        )\n    }\n}\n\nfunction mdp(dispatch) {\n    return {\n        getSandwich: (sandwichObj) => dispatch(getSandwich(sandwichObj)),\n        sandwichBeenClicked: () => dispatch(sandwichBeenClicked())\n    }\n}\n\nexport default connect(null, mdp)(SandwichListItem)","/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/actionTypes.js",[],"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Redux/rootReducer.js",[],"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Containers/DetailsContainer.js",[],"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/Sandwich.js",[],"/Users/jamesl.ardery/Flatiron/MOD-5/rollorhero-frontend/src/Components/FilterBar.js",[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":28},{"ruleId":"43","severity":1,"message":"44","line":38,"column":55,"nodeType":"45","messageId":"46","endLine":38,"endColumn":57},{"ruleId":"47","severity":2,"message":"48","line":9,"column":9,"nodeType":"49","messageId":"50","endLine":9,"endColumn":39},"no-unused-vars","'bindActionCreators' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression"]